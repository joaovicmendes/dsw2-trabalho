body {
    font-family: Helvetica;
    font-size: medium;
}

table, th, td {
    border: 1px solid black;
    border-collapse: collapse;
}
td, th {
    border: 1px solid #ddd;
    padding: 8px;
}

tr:nth-child(even){background-color: #f2f2f2;}
tr:hover {background-color: #ddd;}
th {
    padding-top: 12px;
    padding-bottom: 12px;
    text-align: left;
    background-color: #39b499;
    color: white;
}


.input_text, select {
    width: 100%;
    padding: 12px;
    border: 1px solid #ccc;
    border-radius: 4px;
    resize: vertical;
}
  
label {
    padding: 12px 12px 12px 0;
    display: inline-block;
}
  
input[type=submit], .register_button {
    background-color: #39b499;
    color: white;
    margin-top: 20px;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    float: right;
    text-decoration: none;
}
  
input[type=submit]:hover, button:hover {
    background-color: #238671;
}
  
.container {
    margin-top: 15%;
    margin-left: 25%;
    width: 40%;
    border-radius: 5px;
    background-color: #f2f2f2;
    padding: 20px;
}
  
.col-25 {
    float: left;
    width: 25%;
    margin-top: 6px;
}
  
.col-75 {
    float: left;
    width: 40%;
    margin-top: 6px;
}
.row:after {
    content: "";
    display: table;
    clear: both;
}
/*
    Quando adicionei o bootstrap, sem mexer em nada os botoẽs de selecionar o tipo de cadastro ficavam
    gigantes, esse codigo abaixo arruma isso.
*/
.row>a{
    width: max-content;
}


.top_menu li {
    display: block;
    float: right;
}
.top_menu li:hover {
    background-color: #222;
    
}
.top_menu li a{
    color: white;
    text-decoration: none;
    display: block;
}
.top_menu li {
    display: block;
    color: white;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    
}
.top_menu ul{
    /*position: fixed;
    top: 0;
    já q mudei para grid o main body, isso acaba quebrando o layout
    */
    width: 100%;
    list-style-type: none;
    margin: 0;
    padding-right: 10px;
    overflow: hidden;
    background-color: #333;
}

/*adicionei isso pra poder controlar o tamanho da top bar e remover a necessidade de posição fixa, tbm se
adicionar outras coisas nela ela já se adapta bem
*/
.top_menu{
    display: flex;
    flex-flow: row-reverse;
    
}

/*
    Por mudar pra um formato de grid fica desnecessário essas margens.
    Foi por causa delas que mudei pra grid, na hora de deixar responsivo isso bugava muito o tamanho
    das coisas e grid deixa tudo fechadinho, ai ficou mais fácil.
*/
.main {
    /*margin-left: 220px; /* Same as the width of the sidenav */
    /*margin-top: 75px; /* Same as the width of the sidenav */
    padding: 0px 10px;
    text-decoration: none;
}

/*
    Pra fazer tudo uma grid primeiro criei o novo div de classe "main_body" q é basicamente um wrapper
    que vai ter 2 elementos, a side bar e um wrapper pro resto. Fazendo isso quando o side_menu sumir
    pra manter a responsividade, diminui a quantidade de coisa que tem que mudar de tamanho
*/
.main_body{
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: max-content;
    width: 100vw;
    height: 100vh;
}
/*
    Esse wrapper é pra ter 2 elementos, a top_bar e o main, eu só coloquei o flex-flow de coluna pra
    manter o layout como tava antes.
*/
.wrapper{
    display: flex;
    flex-flow: column;
}
/*
    Essa query serve pra quando o side_menu sumir o body ocupar 100% da largura da tela, antes ele ficava
    com uma parte vazia pq o tamanho não ajustava.
*/
@media screen and (max-width: 1010px) {
    .wrapper{
        width: 100vw;
    }
}

/*
    Faz a tabela ficar com scroll interno nela
*/
.table_wrapper{
    overflow: scroll;
    margin: 20px;
}

@media screen and (max-width: 1010px) {
    .table_wrapper{
        margin: 10px;
    }
}

.promocao_filter{
    display: flex;
    max-width: inherit;
    flex-wrap: wrap;
}

@media screen and (max-width: 1010px) {
    .promocao_filter{
        display: inline-grid;
    }
}

.filter_field{
    width: max-content;
}

button{
height: 30px;
}